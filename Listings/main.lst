


ARM Macro Assembler    Page 1 


    1 00000000         ; M. Akil, T. Grandpierre, R. Kachouri : département IT 
                       - ESIEE Paris -
    2 00000000         ; 01/2013 - Evalbot (Cortex M3 de Texas Instrument)
    3 00000000         ; programme - Pilotage 2 Moteurs Evalbot par PWM tout en
                        ASM (Evalbot tourne sur lui même)
    4 00000000         
    5 00000000         
    6 00000000         
    7 00000000                 AREA             |.text|, CODE, READONLY
    8 00000000                 ENTRY
    9 00000000                 EXPORT           __main
   10 00000000         
   11 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
   12 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   13 00000000         
   14 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   15 00000000                 IMPORT           MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
   16 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   17 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arrière
   18 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   19 00000000         
   20 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   21 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
   22 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   23 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arrière
   24 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   25 00000000         
   26 00000000         
   27 00000000         __main
   28 00000000         
   29 00000000         
   30 00000000         ;; BL Branchement vers un lien (sous programme)
   31 00000000         
   32 00000000         ; Configure les PWM + GPIO
   33 00000000 F7FF FFFE       BL               MOTEUR_INIT
   34 00000004         
   35 00000004         ; Activer les deux moteurs droit et gauche
   36 00000004 F7FF FFFE       BL               MOTEUR_DROIT_ON
   37 00000008 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
   38 0000000C         



ARM Macro Assembler    Page 2 


   39 0000000C         ; Boucle de pilotage des 2 Moteurs (Evalbot tourne sur l
                       ui même)
   40 0000000C         loop
   41 0000000C         ; Evalbot avance droit devant
   42 0000000C F7FF FFFE       BL               MOTEUR_DROIT_AVANT
   43 00000010 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
   44 00000014         
   45 00000014         ; Avancement pendant une période (deux WAIT)
   46 00000014 F000 F807       BL               WAIT        ; BL (Branchement v
                                                            ers le lien WAIT); 
                                                            possibilité de reto
                                                            ur à la suite avec 
                                                            (BX LR)
   47 00000018 F000 F805       BL               WAIT
   48 0000001C         
   49 0000001C         ; Rotation à droite de l'Evalbot pendant une demi-périod
                       e (1 seul WAIT)
   50 0000001C F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE ; MOTEUR_D
                                                            ROIT_INVERSE
   51 00000020 F000 F801       BL               WAIT
   52 00000024         
   53 00000024 E7F2            b                loop
   54 00000026         
   55 00000026         ;; Boucle d'attante
   56 00000026 4902    WAIT    ldr              r1, =0xAFFFFF
   57 00000028 3901    wait1   subs             r1, #1
   58 0000002A D1FD            bne              wait1
   59 0000002C         
   60 0000002C         ;; retour à la suite du lien de branchement
   61 0000002C 4770            BX               LR
   62 0000002E         
   63 0000002E BF00            NOP
   64 00000030                 END
              00AFFFFF 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_Target_1 -IC:\Keil_v5
\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.
4.0\Device\ARM\ARMCM3\Include --predefine="__EVAL SETA 1" --predefine="__MICROL
IB SETA 1" --predefine="__UVISION_VERSION SETA 526" --predefine="_RTE_ SETA 1" 
--predefine="ARMCM3 SETA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 7 in file main.s
   Uses
      None
Comment: .text unused
WAIT 00000026

Symbol: WAIT
   Definitions
      At line 56 in file main.s
   Uses
      At line 46 in file main.s
      At line 47 in file main.s
      At line 51 in file main.s

__main 00000000

Symbol: __main
   Definitions
      At line 27 in file main.s
   Uses
      At line 9 in file main.s
Comment: __main used once
loop 0000000C

Symbol: loop
   Definitions
      At line 40 in file main.s
   Uses
      At line 53 in file main.s
Comment: loop used once
wait1 00000028

Symbol: wait1
   Definitions
      At line 57 in file main.s
   Uses
      At line 58 in file main.s
Comment: wait1 used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 17 in file main.s
   Uses
      At line 50 in file main.s
Comment: MOTEUR_DROIT_ARRIERE used once
MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 16 in file main.s
   Uses
      At line 42 in file main.s
Comment: MOTEUR_DROIT_AVANT used once
MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 18 in file main.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 15 in file main.s
   Uses
      None
Comment: MOTEUR_DROIT_OFF unused
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 14 in file main.s
   Uses
      At line 36 in file main.s
Comment: MOTEUR_DROIT_ON used once
MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 23 in file main.s
   Uses
      None
Comment: MOTEUR_GAUCHE_ARRIERE unused
MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 22 in file main.s
   Uses
      At line 43 in file main.s
Comment: MOTEUR_GAUCHE_AVANT used once
MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 24 in file main.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 21 in file main.s
   Uses
      None
Comment: MOTEUR_GAUCHE_OFF unused
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 20 in file main.s
   Uses
      At line 37 in file main.s
Comment: MOTEUR_GAUCHE_ON used once
MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 12 in file main.s
   Uses
      At line 33 in file main.s
Comment: MOTEUR_INIT used once
11 symbols
353 symbols in table
