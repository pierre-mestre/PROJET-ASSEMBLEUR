


ARM Macro Assembler    Page 1 


    1 00000000         ; M. Akil, T. Grandpierre, R. Kachouri : département IT 
                       - ESIEE Paris -
    2 00000000         ; 01/2013 - Evalbot (Cortex M3 de Texas Instrument)
    3 00000000         ; programme - Pilotage 2 Moteurs Evalbot par PWM tout en
                        ASM (Evalbot tourne sur lui même)
    4 00000000         
    5 00000000         
    6 00000000         
    7 00000000                 AREA             |.text|, CODE, READONLY
    8 00000000                 ENTRY
    9 00000000                 EXPORT           __main
   10 00000000         
   11 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
   12 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   13 00000000         
   14 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   15 00000000                 IMPORT           MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
   16 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   17 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arrière
   18 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   19 00000000         
   20 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   21 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
   22 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   23 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arrière
   24 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   25 00000000 400FE108 
                       SYSCTL_PERIPH_GPIOF
                               EQU              0x400FE108
   26 00000000         
   27 00000000         ; The GPIODATA register is the data register
   28 00000000         ; GPIO Port F (APB) base: 0x4002.5000 (p416 datasheet de
                        ;lm3s9B92.pdf
   29 00000000         
   30 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000
   31 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000



ARM Macro Assembler    Page 2 


   32 00000000         
   33 00000000         
   34 00000000         ; configure the corresponding pin to be an output
   35 00000000         ; all GPIO pins are inputs by default
   36 00000000         ; GPIO Direction (p417 datasheet de lm3s9B92.pdf
   37 00000000         
   38 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x400
   39 00000000         
   40 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   41 00000000         ; By default, all GPIO pins have 2-mA drive.
   42 00000000         ; GPIO 2-mA Drive Select (p428 datasheet de lm3s9B92.pdf
                       )
   43 00000000         
   44 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x500
   45 00000000         
   46 00000000         ; Digital enable register
   47 00000000         ; To use the pin as a digital input or output, the ;corr
                       esponding GPIODEN bit must be set.
   48 00000000         ; GPIO Digital Enable (p437 datasheet de lm3s9B92.pdf)
   49 00000000         
   50 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x51C
   51 00000000         
   52 00000000         ; Registre pour activer les switchs  en logiciel (par dé
                       faut ;ils sont reliés à la masse donc inactifs)
   53 00000000         
   54 00000000 00000510 
                       GPIO_PUR
                               EQU              0x510
   55 00000000         
   56 00000000         ; Port select - LED1 et LED2 sur la ligne 4 et 5 du port
                        F
   57 00000000         
   58 00000000 00000030 
                       PORT45  EQU              0x30
   59 00000000         
   60 00000000         ; Port select - LED 2 sur la ligne 5 du port F
   61 00000000         
   62 00000000 00000020 
                       PORT5   EQU              0x20
   63 00000000         
   64 00000000         ; Port select - LED 1 sur la ligne 4 du port F
   65 00000000         
   66 00000000 00000010 
                       PORT4   EQU              0x10
   67 00000000         
   68 00000000         ; PORT E : selection des BUMPER GAUCHE et DROIT,LIGNE 01
                        du Port E
   69 00000000         
   70 00000000 00000003 
                       PORT01  EQU              0x03
   71 00000000         
   72 00000000         ; PORT E : selection du BUMPER DROIT, LIGNE 0 du Port E



ARM Macro Assembler    Page 3 


   73 00000000         
   74 00000000 00000001 
                       PORT0   EQU              0x01
   75 00000000         
   76 00000000         ; PORT E : selection du BUMPER DROIT, LIGNE 1 du Port E
   77 00000000         
   78 00000000 00000002 
                       PORT1   EQU              0x02
   79 00000000         
   80 00000000         ; Instruction : aucune LED allumée
   81 00000000         
   82 00000000 00000000 
                       NOL2D   EQU              0x00
   83 00000000         
   84 00000000         ; Instruction : LED 1 allumée, ligne 4, du port F
   85 00000000         
   86 00000000 00000010 
                       LED1    EQU              0x10
   87 00000000         
   88 00000000         ; blinking frequency, non utile dans ce programme
   89 00000000         
   90 00000000 002FFFFF 
                       DUREE   EQU              0x002FFFFF
   91 00000000         
   92 00000000         
   93 00000000                 EXPORT           __main
   94 00000000         
   95 00000000         __main
   96 00000000 F04F 0038       mov              r0, #0x00000038
   97 00000004 4E1F            ldr              r6, = SYSCTL_PERIPH_GPIOF
   98 00000006         
   99 00000006 6030            str              r0, [r6]
  100 00000008         
  101 00000008         ;"There must be a delay of 3 system clocks before any GP
                       IO reg. access  (p413 datasheet de lm3s9B92.pdf)
  102 00000008         ;tres tres important....;; pas necessaire en simu ou en 
                       debbug ;step by step...
  103 00000008         
  104 00000008 BF00            nop
  105 0000000A BF00            nop
  106 0000000C BF00            nop
  107 0000000E         
  108 0000000E         ; CONFIGURATION LED
  109 0000000E         
  110 0000000E 4E1E            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DI
R
  111 00000010         
  112 00000010         ; une broche (Pin) du portF en sortie (broche 4 et 5 : 0
                       0110000)
  113 00000010         
  114 00000010 F04F 0030       ldr              r0, = PORT45
  115 00000014 6030            str              r0, [r6]
  116 00000016         ;ldr r0, = PORT5
  117 00000016         ;str r0, [r8]  ; r8 contient sortie du PORT5
  118 00000016         
  119 00000016         ; Enable Digital Function  
  120 00000016         
  121 00000016 4E1D            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DE
N



ARM Macro Assembler    Page 4 


  122 00000018 F04F 0030       ldr              r0, = PORT45
  123 0000001C 6030            str              r0, [r6]
  124 0000001E         
  125 0000001E         ; Choix de l'intensité de sortie (2mA) 
  126 0000001E         
  127 0000001E 4E1C            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DR
2R
  128 00000020 F04F 0030       ldr              r0, = PORT45
  129 00000024 6030            str              r0, [r6]
  130 00000026         
  131 00000026         ; pour eteindre LED
  132 00000026         
  133 00000026         ;mov r2, #0x000           
  134 00000026         
  135 00000026         ; Enable Digital Function - Port E
  136 00000026         
  137 00000026 4F1B            ldr              r7, = GPIO_PORTE_BASE+GPIO_O_DE
N
  138 00000028 F04F 0003       ldr              r0, = PORT01
  139 0000002C 6038            str              r0, [r7]
  140 0000002E         
  141 0000002E         ; Activer le registre des bumpers, Port E
  142 0000002E         
  143 0000002E 4F1A            ldr              r7, = GPIO_PORTE_BASE+GPIO_PUR
  144 00000030 F04F 0003       ldr              r0, = PORT01
  145 00000034 6038            str              r0, [r7]
  146 00000036         
  147 00000036         ;; BL Branchement vers un lien (sous programme)
  148 00000036         
  149 00000036         ; Configure les PWM + GPIO
  150 00000036 F7FF FFFE       BL               MOTEUR_INIT
  151 0000003A         
  152 0000003A         ; Activer les deux moteurs droit et gauche
  153 0000003A F7FF FFFE       BL               MOTEUR_DROIT_OFF
  154 0000003E F7FF FFFE       BL               MOTEUR_GAUCHE_OFF
  155 00000042         
  156 00000042         ; Boucle de pilotage des 2 Moteurs (Evalbot tourne sur l
                       ui même)
  157 00000042         loop
  158 00000042         
  159 00000042         ; Evalbot avance droit devant
  160 00000042         ; Avancement pendant une période (deux WAIT)
  161 00000042 F04F 0330       mov              r3, #PORT45
  162 00000046 4E15            ldr              r6, = GPIO_PORTF_BASE + (PORT45
<<2)
  163 00000048         
  164 00000048         ;lecture de l'état du BUMPER DROIT
  165 00000048         
  166 00000048 4F15            ldr              r7,= GPIO_PORTE_BASE + (PORT0<<
2)
  167 0000004A 683D            ldr              r5, [r7]
  168 0000004C         
  169 0000004C         ;lecture de l'état du BUMPER GAUCHE
  170 0000004C         
  171 0000004C F8DF 9054       ldr              r9, =  GPIO_PORTE_BASE + (PORT1
<<2)
  172 00000050 F8D9 A000       ldr              r10, [r9]
  173 00000054         
  174 00000054         ;Traitement qui allume/éteint la LED1 et la LED2 en fonc



ARM Macro Assembler    Page 5 


                       tion de l'état  ;du SW1, la LED1 est initialement allumé
                       e, et s'éteint si SW1 ;est activé = appuyé
  175 00000054         
  176 00000054         ;si BUMPER DROIT est actif (=0), on éteint la LED1
  177 00000054         
  178 00000054 2D01            cmp              r5,#0x01
  179 00000056 D106            bne              noled1
  180 00000058         
  181 00000058         ;si BUMPER GAUCHE est actif (=0), on éteint la LED2
  182 00000058         
  183 00000058 F1BA 0F02       cmp              r10, #0x02
  184 0000005C D10A            bne              noled2
  185 0000005E         
  186 0000005E 6033            str              r3, [r6]    ; allume les leds 1
                                                             et 2
  187 00000060         
  188 00000060         
  189 00000060 4911            ldr              r1, =0xAFFFFF ; BL (Branchement
                                                             vers le lien WAIT)
                                                            ; possibilité de re
                                                            tour à la suite ave
                                                            c (BX LR)
  190 00000062 4911            ldr              r1, =0xAFFFFF
  191 00000064         
  192 00000064         
  193 00000064 E7ED            b                loop
  194 00000066         noled1
  195 00000066 F7FF FFFE       BL               MOTEUR_DROIT_ON
  196 0000006A F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  197 0000006E 4E0F            ldr              r6, = GPIO_PORTF_BASE + (PORT4<
<2)
  198 00000070 6032            str              r2, [r6]    ; éteint la led 1
  199 00000072 E7E6            b                loop
  200 00000074         
  201 00000074         ;éteindre LED2
  202 00000074         
  203 00000074         noled2
  204 00000074 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  205 00000078 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  206 0000007C 4E0C            ldr              r6, = GPIO_PORTF_BASE + (PORT5<
<2)
  207 0000007E 6032            str              r2, [r6]    ; éteint la led 2
  208 00000080 E7DF            b                loop
  209 00000082 BF00            nop
  210 00000084                 END
              400FE108 
              40025400 
              4002551C 
              40025500 
              4002451C 
              40024510 
              400250C0 
              40024004 
              40024008 
              00AFFFFF 
              40025040 
              40025080 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_Target_1 -IC:\Keil_v5



ARM Macro Assembler    Page 6 


\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.
4.0\Device\ARM\ARMCM3\Include --predefine="__EVAL SETA 1" --predefine="__MICROL
IB SETA 1" --predefine="__UVISION_VERSION SETA 526" --predefine="_RTE_ SETA 1" 
--predefine="ARMCM3 SETA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 7 in file main.s
   Uses
      None
Comment: .text unused
__main 00000000

Symbol: __main
   Definitions
      At line 95 in file main.s
   Uses
      At line 9 in file main.s
      At line 93 in file main.s

loop 00000042

Symbol: loop
   Definitions
      At line 157 in file main.s
   Uses
      At line 193 in file main.s
      At line 199 in file main.s
      At line 208 in file main.s

noled1 00000066

Symbol: noled1
   Definitions
      At line 194 in file main.s
   Uses
      At line 179 in file main.s
Comment: noled1 used once
noled2 00000074

Symbol: noled2
   Definitions
      At line 203 in file main.s
   Uses
      At line 184 in file main.s
Comment: noled2 used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DUREE 002FFFFF

Symbol: DUREE
   Definitions
      At line 90 in file main.s
   Uses
      None
Comment: DUREE unused
GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 50 in file main.s
   Uses
      At line 121 in file main.s
      At line 137 in file main.s

GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 38 in file main.s
   Uses
      At line 110 in file main.s
Comment: GPIO_O_DIR used once
GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 44 in file main.s
   Uses
      At line 127 in file main.s
Comment: GPIO_O_DR2R used once
GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 31 in file main.s
   Uses
      At line 137 in file main.s
      At line 143 in file main.s
      At line 166 in file main.s
      At line 171 in file main.s

GPIO_PORTF_BASE 40025000

Symbol: GPIO_PORTF_BASE
   Definitions
      At line 30 in file main.s
   Uses
      At line 110 in file main.s
      At line 121 in file main.s
      At line 127 in file main.s
      At line 162 in file main.s
      At line 197 in file main.s
      At line 206 in file main.s

GPIO_PUR 00000510




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: GPIO_PUR
   Definitions
      At line 54 in file main.s
   Uses
      At line 143 in file main.s
Comment: GPIO_PUR used once
LED1 00000010

Symbol: LED1
   Definitions
      At line 86 in file main.s
   Uses
      None
Comment: LED1 unused
NOL2D 00000000

Symbol: NOL2D
   Definitions
      At line 82 in file main.s
   Uses
      None
Comment: NOL2D unused
PORT0 00000001

Symbol: PORT0
   Definitions
      At line 74 in file main.s
   Uses
      At line 166 in file main.s
Comment: PORT0 used once
PORT01 00000003

Symbol: PORT01
   Definitions
      At line 70 in file main.s
   Uses
      At line 138 in file main.s
      At line 144 in file main.s

PORT1 00000002

Symbol: PORT1
   Definitions
      At line 78 in file main.s
   Uses
      At line 171 in file main.s
Comment: PORT1 used once
PORT4 00000010

Symbol: PORT4
   Definitions
      At line 66 in file main.s
   Uses
      At line 197 in file main.s
Comment: PORT4 used once
PORT45 00000030

Symbol: PORT45
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 58 in file main.s
   Uses
      At line 114 in file main.s
      At line 122 in file main.s
      At line 128 in file main.s
      At line 161 in file main.s
      At line 162 in file main.s

PORT5 00000020

Symbol: PORT5
   Definitions
      At line 62 in file main.s
   Uses
      At line 206 in file main.s
Comment: PORT5 used once
SYSCTL_PERIPH_GPIOF 400FE108

Symbol: SYSCTL_PERIPH_GPIOF
   Definitions
      At line 25 in file main.s
   Uses
      At line 97 in file main.s
Comment: SYSCTL_PERIPH_GPIOF used once
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 17 in file main.s
   Uses
      None
Comment: MOTEUR_DROIT_ARRIERE unused
MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 16 in file main.s
   Uses
      At line 196 in file main.s
Comment: MOTEUR_DROIT_AVANT used once
MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 18 in file main.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 15 in file main.s
   Uses
      At line 153 in file main.s
Comment: MOTEUR_DROIT_OFF used once
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 14 in file main.s
   Uses
      At line 195 in file main.s
Comment: MOTEUR_DROIT_ON used once
MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 23 in file main.s
   Uses
      None
Comment: MOTEUR_GAUCHE_ARRIERE unused
MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 22 in file main.s
   Uses
      At line 205 in file main.s
Comment: MOTEUR_GAUCHE_AVANT used once
MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 24 in file main.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 21 in file main.s
   Uses
      At line 154 in file main.s
Comment: MOTEUR_GAUCHE_OFF used once
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 20 in file main.s
   Uses
      At line 204 in file main.s
Comment: MOTEUR_GAUCHE_ON used once
MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 12 in file main.s
   Uses
      At line 150 in file main.s
Comment: MOTEUR_INIT used once
11 symbols
369 symbols in table
